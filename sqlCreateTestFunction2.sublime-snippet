<snippet>
    <content><![CDATA[
--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = ${1:SCHEMA}, pg_catalog;

--
-- Name: ${2:NAME(PARAM)}; Type: FUNCTION; Schema: ${1:SCHEMA}; Owner: postgres
--

CREATE OR REPLACE FUNCTION ${2:NAME(PARAM)} RETURNS void
    LANGUAGE plpgsql
    AS \$\$
-- description: ${3:DESCRIPTION}
-- plan: 0
-- module: ${4:MODULE}
-- submodule: ${5:SUBMODULE}
DECLARE
    _scores     dis.score[];
BEGIN
    PERFORM dis.tally(_scores);
END;
\$\$;


ALTER FUNCTION ${1:SCHEMA}.${2:NAME(PARAM)} OWNER TO postgres;

--
-- Name: FUNCTION ${2:NAME(PARAM)}; Type: COMMENT; Schema: ${1:SCHEMA}; Owner: postgres
--

COMMENT ON FUNCTION ${2:NAME(PARAM)} IS '${3:DESCRIPTION} (${6:DATE})';


--
-- PostgreSQL database dump complete
--


]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>testfun</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.sql</scope>
</snippet>
